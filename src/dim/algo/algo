// -*- mode: c++; c-indent-level: 4; c++-member-init-indent: 8; comment-column: 35; -*-

/* This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * Authors:
 * Caner Candan <caner.candan@univ-angers.fr>
 */

#ifndef _ALGO_
#define _ALGO_

/**
   @defgroup Algorithms Algorithms

   In EO, an algorithm is a functor that takes one or several solutions to an optimization
   problem as arguments, and iteratively modify them with the help of operators.

   Generally, an EO object is built by assembling together @ref Operators in an algorithm instance,
   and then calling the algorithm's operator() on an initial population (an eoPop). The algorithm will then
   manipulate the solutions within the population to search for the problem's optimum.
*/

/*************************
 * Main algo header file *
 *************************/

#include "Base.h"
#include "Easy.h"

#endif // !_ALGO_

// Local Variables:
// mode: C++
// End:
